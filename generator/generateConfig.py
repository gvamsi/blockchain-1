from sys import argv

script,org1,org2,org3,peer0,peer1,peer2 = argv
filename = "../configtx.yaml"
target = open(filename,'w')
target.write("# Copyright IBM Corp. All Rights Reserved.\n")
target.write("#\n")
target.write("# SPDX-License-Identifier: Apache-2.0\n")
target.write("#\n")
target.write("\n")
target.write("---\n")
target.write("################################################################################\n")
target.write("#\n")
target.write("#   Profile\n")
target.write("#\n")
target.write("#   - Different configuration profiles may be encoded here to be specified\n")
target.write("#   as parameters to the configtxgen tool\n")
target.write("#\n")
target.write("################################################################################\n")

# Profiles in the hyperledger

target.write("Profiles:\n")
target.write("\n")
target.write("    OrgsOrdererGenesis:\n")
target.write("        Orderer:\n")
target.write("            <<: *OrdererDefaults\n")
target.write("            Organizations:\n")
target.write("                - *OrdererOrg\n")
target.write("        Consortiums:\n")
target.write("            SampleConsortium:\n")
target.write("                Organizations:\n")
target.write("                    - *")
target.write(org1)
target.write("\n")
target.write("                    - *")
target.write(org2)
target.write("\n")
target.write("                    - *")
target.write(org3)
target.write("\n")
target.write("    OrgsChannel:\n")
target.write("        Consortium: SampleConsortium\n")
target.write("        Application:\n")
target.write("            <<: *ApplicationDefaults\n")
target.write("            Organizations:\n")
target.write("                - *")
target.write(org1)
target.write("\n")
target.write("                - *")
target.write(org2)
target.write("\n")
target.write("                - *")
target.write(org3)
target.write("\n")
target.write("\n")
target.write("################################################################################\n")
target.write("#\n")
target.write("#   Section: Organizations\n")
target.write("#\n")
target.write("#   - This section defines the different organizational identities which will\n")
target.write("#   be referenced later in the configuration.\n")
target.write("#\n")
target.write("################################################################################\n")
target.write("Organizations:\n")
target.write("\n")
target.write("    # SampleOrg defines an MSP using the sampleconfig.  It should never be used\n")
target.write("    # in production but may be used as a template for other definitions\n")
target.write("    - &OrdererOrg\n")
target.write("        # DefaultOrg defines the organization which is used in the sampleconfig\n")
target.write("        # of the fabric.git development environment\n")
target.write("        Name: OrdererOrg\n")
target.write("\n")
target.write("        # ID to load the MSP definition as\n")
target.write("        ID: OrdererMSP\n")
target.write("\n")
target.write("        # MSPDir is the filesystem path which contains the MSP configuration\n")
target.write("        MSPDir: crypto-config/ordererOrganizations/example.com/msp\n")
target.write("\n")
target.write("    - &")
target.write(org1)
target.write("\n        # DefaultOrg defines the organization which is used in the sampleconfig\n")
target.write("        # of the fabric.git development environment\n")
target.write("        Name: ")
target.write(org1)
target.write("MSP\n")
target.write("\n        # ID to load the MSP definition as\n")
target.write("        ID: ")
target.write(org1)
target.write("MSP\n\n")
target.write("        MSPDir: crypto-config/peerOrganizations/")
target.write(org1)
target.write(".example.com/msp\n")
target.write("\n        AnchorPeers:\n")
target.write("            # AnchorPeers defines the location of peers which can be used\n")
target.write("            # for cross org gossip communication.  Note, this value is only\n")
target.write("            # encoded in the genesis block in the Application section context\n")
target.write("            - Host: ")
target.write(peer0)
target.write(".")
target.write(org1)
target.write(".example.com\n")
target.write("              Port: 7051\n\n")
target.write("    - &")
target.write(org2)
target.write("\n        # DefaultOrg defines the organization which is used in the sampleconfig\n")
target.write("        # of the fabric.git development environment\n")
target.write("        Name: ")
target.write(org2)
target.write("MSP\n")
target.write("\n        # ID to load the MSP definition as\n")
target.write("        ID: ")
target.write(org2)
target.write("MSP\n\n")
target.write("        MSPDir: crypto-config/peerOrganizations/")
target.write(org2)
target.write(".example.com/msp\n")
target.write("\n        AnchorPeers:\n")
target.write("            # AnchorPeers defines the location of peers which can be used\n")
target.write("            # for cross org gossip communication.  Note, this value is only\n")
target.write("            # encoded in the genesis block in the Application section context\n")
target.write("            - Host: ")
target.write(peer1)
target.write(".")
target.write(org2)
target.write(".example.com\n")
target.write("              Port: 7051\n\n")
target.write("    - &")
target.write(org3)
target.write("\n        # DefaultOrg defines the organization which is used in the sampleconfig\n")
target.write("        # of the fabric.git development environment\n")
target.write("        Name: ")
target.write(org3)
target.write("MSP\n")
target.write("\n        # ID to load the MSP definition as\n")
target.write("        ID: ")
target.write(org3)
target.write("MSP\n\n")
target.write("        MSPDir: crypto-config/peerOrganizations/")
target.write(org3)
target.write(".example.com/msp\n")
target.write("\n        AnchorPeers:\n")
target.write("            # AnchorPeers defines the location of peers which can be used\n")
target.write("            # for cross org gossip communication.  Note, this value is only\n")
target.write("            # encoded in the genesis block in the Application section context\n")
target.write("            - Host: ")
target.write(peer2)
target.write(".")
target.write(org3)
target.write(".example.com\n")
target.write("              Port: 7051\n\n")
target.write("################################################################################\n#\n#   SECTION: Orderer\n#\n")
target.write("#   - This section defines the values to encode into a config transaction or\n#   genesis block for orderer related parameters\n")
target.write("#\n################################################################################\n")
target.write("Orderer: &OrdererDefaults\n\n")
target.write("    # Orderer Type: The orderer implementation to start\n    # Available types are solo and kafka\n")
target.write("    OrdererType: solo\n")
target.write("\n    Addresses:\n")
target.write("        - orderer.example.com:7050\n")
target.write("\n    # Batch Timeout: The amount of time to wait before creating a batch\n")
target.write("    BatchTimeout: 2s\n")
target.write("\n    # Batch Size: Controls the number of messages batched into a block\n")
target.write("    BatchSize:\n")
target.write("\n        # Max Message Count: The maximum number of messages to permit in a batch\n")
target.write("        MaxMessageCount: 10\n\n")
target.write("        # Absolute Max Bytes: The absolute maximum number of bytes allowed for\n        # the serialized messages in a batch.\n")
target.write("        AbsoluteMaxBytes: 99 MB\n\n")
target.write("        # Preferred Max Bytes: The preferred maximum number of bytes allowed for\n        # the serialized messages in a batch. A message larger than the preferred\n        # max bytes will result in a batch larger than preferred max bytes.\n")
target.write("        PreferredMaxBytes: 512 KB\n\n")
target.write("    Kafka:\n")
target.write("        # Brokers: A list of Kafka brokers to which the orderer connects\n        # NOTE: Use IP:port notation\n")
target.write("        Brokers:\n            - 127.0.0.1:9092\n\n")
target.write("    # Organizations is the list of orgs which are defined as participants on\n    # the orderer side of the network\n")
target.write("    Organizations:\n\n")
target.write("################################################################################\n")
target.write("#\n")
target.write("#   SECTION: Application\n")
target.write("#\n")
target.write("#   - This section defines the values to encode into a config transaction or\n")
target.write("#   genesis block for application related parameters\n")
target.write("#\n")
target.write("################################################################################\n")
target.write("Application: &ApplicationDefaults\n")
target.write("\n    # Organizations is the list of orgs which are defined as participants on\n    # the application side of the network\n")
target.write("    Organizations:\n")